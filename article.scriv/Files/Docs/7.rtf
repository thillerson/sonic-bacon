{\rtf1\ansi\ansicpg1252\cocoartf1265\cocoasubrtf190
{\fonttbl\f0\fnil\fcharset0 Cochin;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\sl288\slmult1\pardirnatural

\f0\fs28 \cf0 ## Pop\
\
To get the popping sound what we'll do is just duplicate what we did for the sizzle, but with some different parameters for a slightly different sound.\
\
First, though, disconnect the "output~" and move it to the side. After the "-~ 0.2" create an object: "throw~ out" and connect the "-~ 0.2" to it. Then above the "output~" add an object containing "catch~ out". The throw/catch pattern is a common way to clean up Pd patches that require multiple connections. Signals are sent from one or more named "throw~" objects to a correspondingly named "catch~" object, avoiding a bunch of connections all over the screen.\
\
Now side by side with the stack of objects already in the patch, add objects with these names and arguments: "bp~ 500 0.8", "max~ 0.7", "-~ 0.7". This will take the same noise, but filter with a bandpass filter centered at 500 Hz with a Q of 0.8, take only frequencies above 0.7, and recenter that new signal. This will produce a popping noise when everything is connected up. First, though, to make it stand out a bit from the sizzling noise, let's turn it up a bit. Add an object with the text "*~ 12" (thats asterisk-tilde 12) below the signal subtraction object. This is a signal multiplier object. Multiplying a signal makes it louder. Finally, add another "throw~ out" below the multiplier. \
\
[editor: I have a pdf image to put here]\
\
Now we have a pretty good simulation of bacon frying. Let's take one more step to improve the sound, and then take stock of where we are and what we've learned.}